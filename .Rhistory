read.table('../../results/ROI_analysis/parameterEstimates.txt', sep = "", fill = TRUE, stringsAsFactors=FALSE) %>%
head(10) %>%
kable(format = 'pandoc')
# set mirror from which to download packages
osuRepo = 'http://ftp.osuosl.org/pub/cran/'
if(!require(tidyverse)){
install.packages('tidyverse',repos=osuRepo)
}
if(!require(lme4)){
install.packages('lme4',repos=osuRepo)
}
if(!require(lmerTest)){
install.packages('lmerTest',repos=osuRepo)
}
if(!require(wesanderson)){
install.packages('wesanderson',repos=osuRepo)
}
# load parameter estimate .csv file
data = read.table('../../results/ROI_analysis/parameterEstimates.txt', sep = "", fill = TRUE, stringsAsFactors=FALSE)
# load age covariates and rename variables
age = read.csv('../../data/covariates/age.csv') %>%
rename("subjectID" = Subj,
"wave" = wavenum)
View(data)
View(age)
# tidy raw data
data1 = data %>%
# rename variables
rename('subjectID' = V1,
'wave' = V2,
'con' = V3,
'parcellation' = V4,
'beta' = V5,
'sd' = V6) %>%
# convert con file names to condition names
mutate(target = ifelse(con %in% c('con_0001', 'con_0002'), 'self', 'other'),
domain = ifelse(con %in% c('con_0001', 'con_0003'), 'academic', 'social'),
# change data type to factor
parcellation = as.factor(parcellation),
target = as.factor(target),
domain = as.factor(domain)) %>%
# change to integer
extract(wave, 'wave', 't([0-3]{1})') %>%
mutate(wave = as.integer(wave))
merged = left_join(data1, age, by = c('subjectID', 'wave')) %>%
mutate(age_c = age-mean(age, na.rm=TRUE))
# print data frame header
merged %>%
head(16) %>%
kable(format = 'pandoc')
data.complete = merged %>%
na.omit(.)
# print number of rows
cat('raw data: ', nrow(merged))
cat('complete data: ', nrow(data.complete))
data.complete = merged %>%
na.omit(.)
# print number of rows
cat('raw data: ', nrow(merged))
cat('\ncomplete data: ', nrow(data.complete))
model.1 = lmer(beta ~ target*domain*age_c + (1 | subjectID), data=filter(data.complete, parcellation == 292))
summary(model.1)
model.2 = lmer(beta ~ target*domain*age_c + (1 + age_c | subjectID), data=filter(data.complete, parcellation == 292))
summary(model.2)
anova(model.1, model.2) %>%
`row.names<-`(c('model.1', 'model.2')) %>%
kable()
# set color palette
palette = wes_palette("Zissou", 2, type = "continuous")
ggplot(data.complete, aes(x = age,
y = beta,
group = interaction(subjectID, target, domain),
color = target)) +
geom_point(size = .5, alpha = .1) +
geom_line(alpha = .1) +
geom_line(aes(group=target), size = 1.5, stat = 'smooth', method = 'lm', formula = y ~ poly(x,2)) +
facet_wrap(~parcellation, ncol = 2) +
geom_hline(yintercept = 0, color = 'gray') +
scale_color_manual(breaks = c('self', 'other'), values = c(self=palette[2], other=palette[1])) +
scale_x_continuous(breaks=c(10,13,16)) +
coord_cartesian(ylim=c(-1,1)) +
theme_minimal(base_size = 18)
knitr::opts_chunk$set(fig.width=8, fig.height=6, warning=FALSE, message=FALSE)
if(!require(knitr)){
install.packages('knitr',repos=osuRepo)
}
if(!require(dplyr)){
install.packages('dplyr',repos=osuRepo)
}
read.table('../../results/ROI_analysis/parameterEstimates.txt', sep = "", fill = TRUE, stringsAsFactors=FALSE) %>%
head(10) %>%
kable(format = 'pandoc')
# set mirror from which to download packages
osuRepo = 'http://ftp.osuosl.org/pub/cran/'
if(!require(tidyr)){
install.packages('tidyr',repos=osuRepo)
}
if(!require(ggplot2)){
install.packages('ggplot2',repos=osuRepo)
}
if(!require(lme4)){
install.packages('lme4',repos=osuRepo)
}
if(!require(lmerTest)){
install.packages('lmerTest',repos=osuRepo)
}
if(!require(wesanderson)){
install.packages('wesanderson',repos=osuRepo)
}
if(!require(rmarkdown)){
install.packages('rmarkdown',repos=osuRepo)
}
# load parameter estimate .csv file
data = read.table('../../results/ROI_analysis/parameterEstimates.txt', sep = "", fill = TRUE, stringsAsFactors=FALSE)
# load age covariates and rename variables
age = read.csv('../../data/covariates/age.csv') %>%
rename("subjectID" = Subj,
"wave" = wavenum)
# tidy raw data
data1 = data %>%
# rename variables
rename('subjectID' = V1,
'wave' = V2,
'con' = V3,
'parcellation' = V4,
'beta' = V5,
'sd' = V6) %>%
# convert con file names to condition names
mutate(target = ifelse(con %in% c('con_0001', 'con_0002'), 'self', 'other'),
domain = ifelse(con %in% c('con_0001', 'con_0003'), 'academic', 'social'),
# change data type to factor
parcellation = as.factor(parcellation),
target = as.factor(target),
domain = as.factor(domain)) %>%
# change to integer
extract(wave, 'wave', 't([0-3]{1})') %>%
mutate(wave = as.integer(wave))
merged = left_join(data1, age, by = c('subjectID', 'wave')) %>%
mutate(age_c = age-mean(age, na.rm=TRUE))
# print data frame header
merged %>%
head(16) %>%
kable(format = 'pandoc')
data.complete = merged %>%
na.omit(.)
# print number of rows
cat('raw data: ', nrow(merged))
cat('\ncomplete data: ', nrow(data.complete))
model.1 = lmer(beta ~ target*domain*age_c + (1 | subjectID), data=filter(data.complete, parcellation == 292))
summary(model.1)
model.2 = lmer(beta ~ target*domain*age_c + (1 + age_c | subjectID), data=filter(data.complete, parcellation == 292))
summary(model.2)
# set color palette
palette = wes_palette("Zissou", 2, type = "continuous")
ggplot(data.complete, aes(x = age,
y = beta,
group = interaction(subjectID, target, domain),
color = target)) +
geom_point(size = .5, alpha = .1) +
geom_line(alpha = .1) +
geom_line(aes(group=target), size = 1.5, stat = 'smooth', method = 'lm', formula = y ~ poly(x,2)) +
facet_wrap(~parcellation, ncol = 2) +
geom_hline(yintercept = 0, color = 'gray') +
scale_color_manual(breaks = c('self', 'other'), values = c(self=palette[2], other=palette[1])) +
scale_x_continuous(breaks=c(10,13,16)) +
coord_cartesian(ylim=c(-1,1)) +
theme_minimal(base_size = 18)
# extract random effects formula from model.2 and reconstruct it to use with the `predict` function
REFormulaString = as.character(findbars(model.1@call$formula)[[1]])
REFormula = as.formula(paste0('~(', REFormulaString[[2]], REFormulaString[[1]], REFormulaString[[3]], ')'))
# get expected values for each observation based on model.2
data.complete$expected.1 <- predict(model.1, newdata = data.complete, re.form=REFormula)
data.complete$expected_mean.1 <- predict(model.1, newdata = data.complete, re.form=NA)
ggplot(data.complete, aes(x = age,
y = expected.1,
group = interaction(subjectID, target, domain),
color = target)) +
geom_point(size = .5, alpha = .1) +
geom_line(alpha = .1) +
geom_line(aes(y = expected_mean.1, group=target), size = 1.5, stat = 'smooth', method = 'lm', formula = y ~ poly(x,2)) +
facet_wrap(~parcellation, ncol = 2) +
geom_hline(yintercept = 0, color = 'gray') +
scale_color_manual(breaks = c('self', 'other'), values = c(self=palette[2], other=palette[1])) +
scale_x_continuous(breaks=c(10,13,16)) +
coord_cartesian(ylim=c(-1,1)) +
theme_minimal(base_size = 18)
anova(model.1, model.2) %>%
`row.names<-`(c('model.1', 'model.2')) %>%
kable(digist = 2)
anova(model.1, model.2) %>%
`row.names<-`(c('model.1', 'model.2')) %>%
kable(digits = 2)
merged = left_join(data1, age, by = c('subjectID', 'wave')) %>%
mutate(age_c = age-mean(age, na.rm=TRUE))
# print data frame header
merged %>%
head(16) %>%
kable(format = 'pandoc', digits = 2)
if(!require(knitr)){
install.packages('knitr',repos=osuRepo)
}
if(!require(dplyr)){
install.packages('dplyr',repos=osuRepo)
}
read.table('../../results/ROI_analysis/parameterEstimates.txt', sep = "", fill = TRUE, stringsAsFactors=FALSE) %>%
head(10) %>%
kable(format = 'pandoc', digits = 2)
knitr::opts_chunk$set(fig.width=8, fig.height=6, warning=FALSE, message=FALSE)
if(!require(knitr)){
install.packages('knitr',repos=osuRepo)
}
if(!require(dplyr)){
install.packages('dplyr',repos=osuRepo)
}
read.table('../../results/ROI_analysis/parameterEstimates.txt', sep = "", fill = TRUE, stringsAsFactors=FALSE) %>%
head(10) %>%
kable(format = 'pandoc', digits = 2)
# set mirror from which to download packages
osuRepo = 'http://ftp.osuosl.org/pub/cran/'
if(!require(tidyr)){
install.packages('tidyr',repos=osuRepo)
}
if(!require(ggplot2)){
install.packages('ggplot2',repos=osuRepo)
}
if(!require(lme4)){
install.packages('lme4',repos=osuRepo)
}
if(!require(lmerTest)){
install.packages('lmerTest',repos=osuRepo)
}
if(!require(wesanderson)){
install.packages('wesanderson',repos=osuRepo)
}
if(!require(rmarkdown)){
install.packages('rmarkdown',repos=osuRepo)
}
# load parameter estimate .csv file
data = read.table('../../results/ROI_analysis/parameterEstimates.txt', sep = "", fill = TRUE, stringsAsFactors=FALSE)
# load age covariates and rename variables
age = read.csv('../../data/covariates/age.csv') %>%
rename("subjectID" = Subj,
"wave" = wavenum)
# tidy raw data
data1 = data %>%
# rename variables
rename('subjectID' = V1,
'wave' = V2,
'con' = V3,
'parcellation' = V4,
'beta' = V5,
'sd' = V6) %>%
# convert con file names to condition names
mutate(target = ifelse(con %in% c('con_0001', 'con_0002'), 'self', 'other'),
domain = ifelse(con %in% c('con_0001', 'con_0003'), 'academic', 'social'),
# change data type to factor
parcellation = as.factor(parcellation),
target = as.factor(target),
domain = as.factor(domain)) %>%
# change to integer
extract(wave, 'wave', 't([0-3]{1})') %>%
mutate(wave = as.integer(wave))
merged = left_join(data1, age, by = c('subjectID', 'wave')) %>%
mutate(age_c = age-mean(age, na.rm=TRUE))
# print data frame header
merged %>%
head(16) %>%
kable(format = 'pandoc', digits = 2)
data.complete = merged %>%
na.omit(.)
# print number of rows
cat('raw data: ', nrow(merged))
cat('\ncomplete data: ', nrow(data.complete))
model.1 = lmer(beta ~ target*domain*age_c + (1 | subjectID), data=filter(data.complete, parcellation == 292))
summary(model.1)
model.2 = lmer(beta ~ target*domain*age_c + (1 + age_c | subjectID), data=filter(data.complete, parcellation == 292))
summary(model.2)
anova(model.1, model.2) %>%
`row.names<-`(c('model.1', 'model.2')) %>%
kable(digits = 2)
# set color palette
palette = wes_palette("Zissou", 2, type = "continuous")
ggplot(data.complete, aes(x = age,
y = beta,
group = interaction(subjectID, target, domain),
color = target)) +
geom_point(size = .5, alpha = .1) +
geom_line(alpha = .1) +
geom_line(aes(group=target), size = 1.5, stat = 'smooth', method = 'lm', formula = y ~ poly(x,2)) +
facet_wrap(~parcellation, ncol = 2) +
geom_hline(yintercept = 0, color = 'gray') +
scale_color_manual(breaks = c('self', 'other'), values = c(self=palette[2], other=palette[1])) +
scale_x_continuous(breaks=c(10,13,16)) +
coord_cartesian(ylim=c(-1,1)) +
theme_minimal(base_size = 18)
ggplot(data.complete, aes(x = age,
y = beta,
group = interaction(subjectID, target, domain),
color = target,
linetype = domain)) +
geom_point(size = .5, alpha = .1) +
geom_line(alpha = .1) +
geom_line(aes(group=interaction(target,domain)), size = 1.5, stat = 'smooth', method = 'lm', formula = y ~ poly(x,2)) +
facet_wrap(~parcellation, ncol = 2) +
geom_hline(yintercept = 0, color = 'gray')+
scale_color_manual(breaks = c('self', 'other'), values = c(self=palette[2], other=palette[1]))+
scale_x_continuous(breaks=c(10,13,16)) +
coord_cartesian(ylim=c(-1,1)) +
theme_minimal(base_size = 18)
# extract random effects formula from model.2 and reconstruct it to use with the `predict` function
REFormulaString = as.character(findbars(model.1@call$formula)[[1]])
REFormula = as.formula(paste0('~(', REFormulaString[[2]], REFormulaString[[1]], REFormulaString[[3]], ')'))
# get expected values for each observation based on model.2
data.complete$expected.1 <- predict(model.1, newdata = data.complete, re.form=REFormula)
data.complete$expected_mean.1 <- predict(model.1, newdata = data.complete, re.form=NA)
ggplot(data.complete, aes(x = age,
y = expected.1,
group = interaction(subjectID, target, domain),
color = target)) +
geom_point(size = .5, alpha = .1) +
geom_line(alpha = .1) +
geom_line(aes(y = expected_mean.1, group=target), size = 1.5, stat = 'smooth', method = 'lm', formula = y ~ poly(x,2)) +
facet_wrap(~parcellation, ncol = 2) +
geom_hline(yintercept = 0, color = 'gray') +
scale_color_manual(breaks = c('self', 'other'), values = c(self=palette[2], other=palette[1])) +
scale_x_continuous(breaks=c(10,13,16)) +
coord_cartesian(ylim=c(-1,1)) +
theme_minimal(base_size = 18)
ggplot(data.complete, aes(x = age,
y = expected.1,
group = interaction(subjectID, target, domain),
color = target,
linetype = domain)) +
geom_point(size = .5, alpha = .1) +
geom_line(alpha = .1) +
geom_line(aes(y = expected_mean.1, group=interaction(target,domain)), size = 1.5, stat = 'smooth', method = 'lm', formula = y ~ poly(x,2)) +
facet_wrap(~parcellation, ncol = 2) +
geom_hline(yintercept = 0, color = 'gray')+
scale_color_manual(breaks = c('self', 'other'), values = c(self=palette[2], other=palette[1]))+
scale_x_continuous(breaks=c(10,13,16)) +
coord_cartesian(ylim=c(-1,1)) +
theme_minimal(base_size = 18)
library(tidyverse)
library(knitr)
fxCons = data.frame(file = list.files('/Volumes/psych-cog/dsnlab/MDC/functional-workshop/data/FX_models/'))
getwd()
write.csv(x = fxCons, file = '/Volumes/psych-cog/dsnlab/MDC/functional-workshop/data/FX_models/fxCons.csv', row.names = FALSE)
fxCons = read.csv('/Volumes/psych-cog/dsnlab/MDC/functional-workshop/data/FX_models/fxCons.csv')
View(fxCons)
covariates = covariates %>%
mutate(age_c = age-13,
age_c2 = age_c^2) %>%
select(Subj, wavenum, starts_with("age_c"))
covariates = read.csv('/Volumes/psych-cog/dsnlab/MDC/functional-workshop/data/covariates/age.csv')
covariates = covariates %>%
mutate(age_c = age-13,
age_c2 = age_c^2) %>%
select(Subj, wavenum, starts_with("age_c"))
fxCons = fxCons %>%
extract(file, c("Subj","wavenum","con"),
regex = "(s[0-9]{3})_t([0-3]{1})_(con_[0-4]{4}).nii",
remove = FALSE) %>%
mutate(domain = ifelse(con %in% c("con_0001", "con_0003"), "academic", "social"),
target = ifelse(con %in% c("con_0001", "con_0002"), "self", "other"),
InputFile = paste0('/Volumes/psych-cog/dsnlab/MDC/functional-workshop/data/FX_models/',file),
wavenum = as.integer(wavenum))
View(fxCons)
# load csv file with fx con file names
#fxCons = data.frame(file = list.files('./data/FX_models/')) # get file names from contrast .nii files
fxCons = read.csv('./data/FX_models/fxCons.csv')
fxCons = read.csv('./data/FX_models/fxCons.csv')
getwd()
fxCons = read.csv('../../data/FX_models/fxCons.csv')
fxCons = read.csv('../../../data/FX_models/fxCons.csv')
# load csv file with fx con file names
#fxCons = data.frame(file = list.files('./data/FX_models/')) # get file names from contrast .nii files
getwd()
fxCons = read.csv('../../../data/FX_models/fxCons.csv')
fxCons = data.frame(file = list.files('./data/FX_models/')) # get file names from contrast .nii files
write.csv(x = fxCons, file = '~/Documents/code/dsnlab/functional-workshop/data/fxCons.csv', row.names = FALSE)
# load csv file with fx con file names
#fxCons = data.frame(file = list.files('./data/FX_models/')) # get file names from contrast .nii files
getwd()
fxCons = read.csv('../../../data/fxCons.csv')
# print header
fxCons %>%
head(6) %>%
kable(format = 'pandoc')
# load age
covariates = read.csv('../../../data/covariates/age.csv')
# print header
covariates %>%
head(6) %>%
kable(format = 'pandoc')
library(tidyverse)
library(knitr)
# load csv file with fx con file names
#fxCons = data.frame(file = list.files('./data/FX_models/')) # get file names from contrast .nii files
fxCons = read.csv('../../../data/fxCons.csv')
# load csv file with fx con file names
#fxCons = data.frame(file = list.files('./data/FX_models/')) # get file names from contrast .nii files
fxCons = read.csv('../../../data/FX_models/fxCons.csv')
# print header
fxCons %>%
head(6) %>%
kable(format = 'pandoc')
# load age
covariates = read.csv('../../../data/covariates/age.csv')
# print header
covariates %>%
head(6) %>%
kable(format = 'pandoc')
# load csv file with fx con file names
#fxCons = data.frame(file = list.files('./data/FX_models/')) # get file names from contrast .nii files
fxCons = read.csv('../../../data/FX_models/fxCons.csv')
# print header
fxCons %>%
head(6) %>%
kable(format = 'pandoc')
# load age
covariates = read.csv('../../../data/covariates/age.csv')
# print header
covariates %>%
head(6) %>%
kable(format = 'pandoc')
# center age and create quadratic term for age
covariates = covariates %>%
mutate(age_c = age-13,
age_c2 = age_c^2) %>%
select(Subj, wavenum, starts_with("age_c"))
# extract condition information from contrast files
fxCons = fxCons %>%
extract(file, c("Subj","wavenum","con"),
regex = "(s[0-9]{3})_t([0-3]{1})_(con_[0-4]{4}).nii",
remove = FALSE) %>%
mutate(domain = ifelse(con %in% c("con_0001", "con_0003"), "academic", "social"),
target = ifelse(con %in% c("con_0001", "con_0002"), "self", "other"),
InputFile = paste0('/Volumes/psych-cog/dsnlab/MDC/functional-workshop/data/FX_models/',file), # CHANGE THIS PATH
wavenum = as.integer(wavenum))
View(fxCons)
fxCons = read.csv('../../../data/FX_models/fxCons.csv')
fxCons = data.frame(file = list.files('./data/FX_models/')) # get file names from contrast .nii files
fxCons = data.frame(file = list.files('/Volumes/psych-cog/dsnlab/MDC/functional-workshop/data/FX_models/')) # get file names from contrast .nii files
write.csv(fxCons, '~/Documents/code/dsnlab/functional-workshop/data/FX_models/fxCons.csv')
library(tidyverse)
library(knitr)
# load csv file with fx con file names
#fxCons = data.frame(file = list.files('./data/FX_models/')) # get file names from contrast .nii files
fxCons = read.csv('../../../data/FX_models/fxCons.csv')
# print header
fxCons %>%
head(6) %>%
kable(format = 'pandoc')
# load age
covariates = read.csv('../../../data/covariates/age.csv')
# print header
covariates %>%
head(6) %>%
kable(format = 'pandoc')
# center age and create quadratic term for age
covariates = covariates %>%
mutate(age_c = age-13,
age_c2 = age_c^2) %>%
select(Subj, wavenum, starts_with("age_c"))
# extract condition information from contrast files
fxCons = fxCons %>%
extract(file, c("Subj","wavenum","con"),
regex = "(s[0-9]{3})_t([0-3]{1})_(con_[0-4]{4}).nii",
remove = FALSE) %>%
mutate(domain = ifelse(con %in% c("con_0001", "con_0003"), "academic", "social"),
target = ifelse(con %in% c("con_0001", "con_0002"), "self", "other"),
InputFile = paste0('/Volumes/psych-cog/dsnlab/MDC/functional-workshop/data/FX_models/',file), # CHANGE THIS PATH
wavenum = as.integer(wavenum))
# exclude subjects based on motion
motion.exclusions = c('s002_t1', 's004_t1', 's008_t1', 's011_t1', 's017_t1', 's026_t1', 's033_t2', 's034_t1', 's041_t1', 's044_t1', 's047_t1', 's051_t1', 's054_t1', 's057_t1', 's059_t1', 's061_t1', 's063_t1', 's070_t2', 's074_t1', 's074_t2', 's078_t1', 's084_t1', 's090_t2', 's090_t3', 's094_t1', 's094_t2', 's096_t1')
included.motion = fxCons %>% filter(!grepl(paste(motion.exclusions,collapse="|"), file))
# exclude all subjects that do not have all 3 timepoints
inclusions.3Ts = c('s005', 's016', 's018', 's019', 's022', 's023', 's024', 's029', 's030', 's032', 's035', 's038', 's040', 's042', 's045', 's058', 's064', 's065', 's072', 's073', 's081', 's089')
included.3Ts = fxCons %>% filter(grepl(paste(inclusions.3Ts, collapse="|"), Subj))
age.motion = left_join(included.motion, covariates, by = c("Subj", "wavenum")) %>%
select(Subj, target, domain, starts_with("age_c"), InputFile) %>%
filter(!is.na(age_c))
age.3Ts = left_join(included.3Ts, covariates, by = c("Subj", "wavenum")) %>%
select(Subj, target, domain, starts_with("age_c"), InputFile) %>%
filter(!is.na(age_c))
# print header
age.motion %>%
head(10) %>%
kable(format = 'pandoc')
write.table(age.motion, '../../../code/RX_comparison/AFNI/model_all.txt', sep = "\t", quote=FALSE, row.names = FALSE)
write.table(age.3Ts, '../../../RX_comparison/AFNI/model_3Ts.txt', sep = "\t", quote=FALSE, row.names = FALSE)
write.table(age.motion, '../../../code/RX_comparison/AFNI/model_all.txt', sep = "\t", quote=FALSE, row.names = FALSE)
write.table(age.3Ts, '../../../RX_comparison/AFNI/model_3Ts.txt', sep = "\t", quote=FALSE, row.names = FALSE)
write.table(age.motion, '../../../code/RX_comparison/AFNI/model_all.txt', sep = "\t", quote=FALSE, row.names = FALSE)
write.table(age.3Ts, '../AFNI/model_3Ts.txt', sep = "\t", quote=FALSE, row.names = FALSE)
fxCons = data.frame(file = list.files('/Volumes/psych-cog/dsnlab/MDC/functional-workshop/data/FX_models/')) # get file names from contrast .nii files
head(fxCons)
fxCons = data.frame(file = list.files('/Volumes/psych-cog/dsnlab/MDC/functional-workshop/data/FX_models/')) # get file names from contrast .nii files
rm(fxCons)
fxCons = data.frame(file = list.files('/Volumes/psych-cog/dsnlab/MDC/functional-workshop/data/FX_models/')) # get file names from contrast .nii files
head(fxCons)
rm(fxCons)
fxCons = data.frame(file = list.files('/Volumes/psych-cog/dsnlab/MDC/functional-workshop/data/FX_models/')) # get file names from contrast .nii files
head(fxCons)
fxCons = data.frame(file = list.files('/Volumes/psych-cog/dsnlab/MDC/functional-workshop/data/FX_models/')) # get file names from contrast .nii files
head(fxCons)
write.csv(fxCons, '~/Documents/code/dsnlab/functional-workshop/data/FX_models/fxCons.csv')
fxCons = data.frame(file = list.files('/Volumes/psych-cog/dsnlab/MDC/functional-workshop/data/FX_models/')) # get file names from contrast .nii files
write.csv(fxCons, '~/Documents/code/dsnlab/functional-workshop/data/FX_models/fxCons.csv', row.names = FALSE)
head(fxCons)
fxCons = read.csv('../../../data/FX_models/fxCons.csv')
head(fxCons)
